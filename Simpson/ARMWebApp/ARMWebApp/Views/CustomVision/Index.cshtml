@{
    ViewData["Title"] = "Home Page";
}
@model CustomVisionViewModel

<h1> FROM URL</h1>
<form asp-controller="CustomVision" asp-action="FromUrl" method="post">
    <div class="form-group">
        <label for="url">Inserisci un URL di una immagine pubblica</label>
        <input type="text" id="url" name="url" class="form-control" placeholder="Inserisci un URL di una immagine pubblica" />
    </div>
    <button type="submit" class="btn btn-primary">Analizza</button>
</form>
<br />
<h1> FROM INPUT</h1>
<form asp-controller="CustomVision" asp-action="FromByteArray" method="post" enctype="multipart/form-data">
    <div class="form-group">
        <label for="url">Carica una immagine locale</label>
        <input type="file" name="imageSource" id="imageSource" class="form-control-file" />
    </div>
    <button type="submit" class="btn btn-primary">Analizza</button>
</form>
<br />
@if (Model != null)
{
    <div class="text-center">
        <div class="row">
            <div class="col-md-4"><b>TagId</b></div>
            <div class="col-md-4"><b>Tag Name</b></div>
            <div class="col-md-4"><b>Probability</b></div>
        </div>
        @foreach (var element in Model.Predictions)
        {
            <div class="row">
                <div class="col-md-4">@element.TagId</div>
                <div class="col-md-4">@element.TagName</div>
                <div class="col-md-4">@element.Probability</div>
            </div>
        }
    </div>
    <div class="text-center">
        <canvas id="imageResult" width="600" height="600"></canvas>
    </div>
}
<br />
<div class="jumbotron">
    <h1 class="display-4">Esempi</h1>
    <p>Esempi di immagini utilizzati:</p>
    <a href="https://github.com/andreatosato/CognitiveServiceContainer/tree/master/Simpson/Test" class="btn-link">Dataset</a>
    OR
    <p>
        <img src="https://raw.githubusercontent.com/andreatosato/CognitiveServiceContainer/master/Simpson/Test/bart_simpson_31.jpg" />
        https://raw.githubusercontent.com/andreatosato/CognitiveServiceContainer/master/Simpson/Test/bart_simpson_31.jpg
    </p>
    <p>
        <img src="https://raw.githubusercontent.com/andreatosato/CognitiveServiceContainer/master/Simpson/Test/SimpsonFamily/simpsons-family-background-image-ipod.jpg" />
        https://raw.githubusercontent.com/andreatosato/CognitiveServiceContainer/master/Simpson/Test/SimpsonFamily/simpsons-family-background-image-ipod.jpg
    </p>
    <p>
        <img src="https://vignette.wikia.nocookie.net/doblaje-fanon/images/b/bd/Homer_Simpson.png/revision/latest?cb=20181123014115&path-prefix=es" />
        https://vignette.wikia.nocookie.net/doblaje-fanon/images/b/bd/Homer_Simpson.png/revision/latest?cb=20181123014115&path-prefix=es
    </p>
    <p>
        <img src="https://vignette.wikia.nocookie.net/animatedmusclewomen/images/0/0b/Marge_Simpson.png/revision/latest?cb=20150311195902" />
        https://vignette.wikia.nocookie.net/animatedmusclewomen/images/0/0b/Marge_Simpson.png/revision/latest?cb=20150311195902
    </p>
    <p>
        <img src="https://upload.wikimedia.org/wikipedia/en/thumb/e/ec/Lisa_Simpson.png/220px-Lisa_Simpson.png" />
        https://upload.wikimedia.org/wikipedia/en/thumb/e/ec/Lisa_Simpson.png/220px-Lisa_Simpson.png
    </p>
</div>

<script type="text/javascript">
    document.addEventListener("DOMContentLoaded", function () {
        debugger
        draw();
    });
    function draw() {
        @if (Model != null)
        {
            <text>
            var canvas = document.getElementById("imageResult");
            var ctx = canvas.getContext("2d");

            var image = new Image();
            image.onload = function (par) {
                // clear canvas
                ctx.clearRect(0, 0, canvas.width, canvas.height);

                canvas.width = image.width;
                canvas.height = image.height;
                ctx.drawImage(image, 0, 0, image.width, image.height);
                @foreach(var pred in Model.Predictions)
                {
                    <text>
                    drawRectangle(@pred.BoundingBox.Left * image.width,
                        @pred.BoundingBox.Top * image.height,
                        @pred.BoundingBox.Width * image.width,
                        @pred.BoundingBox.Height * image.height,
                        ctx);
                    </Text>
                }
            };
            image.onerror = function () { alert('error image');}
            image.src = 'data:image/jpeg;charset=utf-8;base64,' + '@Model.ImageSource';

            </text>
        }
    }

    function drawRectangle(left, top, width, height, ctx){
        ctx.beginPath();
        ctx.strokeStyle = 'red';
        ctx.lineWidth = '2';
        ctx.rect(left, top, width, height);
        ctx.stroke();
    }
</script>
